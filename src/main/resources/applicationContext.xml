<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
				http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
				http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">
     
    <beans profile="prod">
        <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
            <property name="driverClassName" value="org.postgresql.Driver"/>
            <property name="url" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }"/>
            <property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
            <property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
        </bean>
        <bean class="java.net.URI" id="dbUrl">
            <constructor-arg value="#{systemEnvironment['DATABASE_URL']}"/>
        </bean>        
    </beans>
    
    <beans profile="dev">
        <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
            <property name="driverClassName" value="org.h2.Driver"/>
            <property name="url" value="jdbc:h2:mem:devdb;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;TRACE_LEVEL_SYSTEM_OUT=2"/>
            <property name="username" value="sa"/>
            <property name="password" value=""/>
        </bean>		
    </beans>
    
    <beans profile="prod,dev">
        <context:component-scan base-package="kt.appmonitor"/>
    
        <context:property-placeholder location="classpath:config.properties"/>
		
		<tx:annotation-driven/> 
        
        <jdbc:initialize-database data-source="dataSource" enabled="true">
            <jdbc:script location="classpath:db-schema-pgsql.sql"/>
        </jdbc:initialize-database>
		
		<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
			<property name="dataSource" ref="dataSource"/>
			<property name="packagesToScan" value="kt.appmonitor.data"/>
			<property name="hibernateProperties">
				<props>
					<prop key="jadira.usertype.autoRegisterUserTypes">true</prop>
				</props>
			</property>
		</bean>		
    
		<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
			<property name="sessionFactory" ref="sessionFactory" />
		</bean>
		
		<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
		
		<task:executor id="myExecutor" pool-size="1"/>
		<task:annotation-driven executor="myExecutor"/>
		
		<bean id="maxDurationBetweenHeartbeats" class="org.joda.time.Duration" factory-method="standardMinutes">
			<constructor-arg value="${max-minutes-beetween-heartbeats}"/>			
		</bean>
    </beans>
</beans>